version: '3'
services:
######## Miniflux ########
  miniflux:
    container_name: "mf-frontend"
    image: "ghcr.io/miniflux/miniflux:2.0.51"
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: "postgres://miniflux:{{ lookup('keepass', 'miniflux_postgres_password', 'password') }}"@mf-db/miniflux?sslmode=disable
      RUN_MIGRATIONS: 1
#      CREATE_ADMIN: 1
#      ADMIN_USERNAME: adminmf
#      ADMIN_PASSWORD: "{{ lookup('keepass', 'miniflux_admin_password', 'password') }}"
      WORKER_POOL_SIZE: 10
      POLLING_FREQUENCY: 10
      CLEANUP_ARCHIVE_UNREAD_DAYS: -1
      CLEANUP_ARCHIVE_READ_DAYS: 90
      TZ: Europe/Berlin
    networks:
      - intern
      - traefik
    labels:
      traefik.http.routers.miniflux.rule: Host(`miniflux.mgrote.net`)
      traefik.enable: true
      traefik.http.routers.miniflux.tls: true
      traefik.http.routers.miniflux.tls.certresolver: resolver_letsencrypt
      traefik.http.routers.miniflux.entrypoints: entry_https
      traefik.http.services.miniflux.loadbalancer.server.port: 8080

      com.centurylinklabs.watchtower.enable: true
      com.centurylinklabs.watchtower.depends-on: mf-db


######## PostGreSQL ########
  db:
    container_name: "mf-db"
    image: "postgres:16.0"
    restart: always
    environment:
      POSTGRES_USER: miniflux
      POSTGRES_PASSWORD: "{{ lookup('keepass', 'miniflux_postgres_password', 'password') }}"
      TZ: Europe/Berlin
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - intern
    labels:
      com.centurylinklabs.watchtower.enable: true

######## Miniflux-Filter ########
  mf-filter:
    container_name: mf-filter
    depends_on:
      - miniflux
    restart: always
    environment:
      TZ: Europe/Berlin
      MF_AUTH_TOKEN: "{{ lookup('keepass', 'miniflux_auth_token', 'password') }}"
      MF_API_URL: https://miniflux.mgrote.net/v1
      MF_SLEEP: 600
      #MF_DEBUG: 1
    image: "registry.mgrote.net/miniflux-filter:latest"
    volumes:
      - ./filter.txt:/data/filter.txt
    networks:
      - intern
    labels:
      com.centurylinklabs.watchtower.enable: true
      com.centurylinklabs.watchtower.depends-on: mf-frontend

######## Volumes ########
volumes:
  db:
######## Networks ########
networks:
  traefik:
    external: true
  intern:
    driver: bridge
