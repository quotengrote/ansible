version: '3'
services:
  miniflux:
    container_name: "mf-app"
    image: miniflux/miniflux:latest
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://miniflux:{{ lookup('keepass', 'miniflux_postgres_password', 'password') }}@mf-db/miniflux?sslmode=disable
      RUN_MIGRATIONS: 1
#      CREATE_ADMIN: 1
#      ADMIN_USERNAME: adminmf
#      ADMIN_PASSWORD: {{ lookup('keepass', 'miniflux_admin_password', 'password') }}
      WORKER_POOL_SIZE: 10
      POLLING_FREQUENCY: 10
      CLEANUP_ARCHIVE_UNREAD_DAYS: -1
      CLEANUP_ARCHIVE_READ_DAYS: 90
      TZ: Europe/Berlin
    networks:
      - intern
      - traefik
    labels:
      traefik.http.routers.miniflux.rule: Host(`miniflux.mgrote.net`)
      traefik.enable: true
      traefik.http.routers.miniflux.tls: true
      traefik.http.routers.miniflux.tls.certresolver: resolver_letsencrypt
      traefik.http.routers.miniflux.entrypoints: entry_https
      traefik.http.services.miniflux.loadbalancer.server.port: 8080

      com.centurylinklabs.watchtower.enable: true
      com.centurylinklabs.watchtower.depends-on: mf-db

  db:
    container_name: "mf-db"
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: miniflux
      POSTGRES_PASSWORD: {{ lookup('keepass', 'miniflux_postgres_password', 'password') }}
      TZ: Europe/Berlin
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - intern
    labels:
      com.centurylinklabs.watchtower.enable: true

  miniflux-filter:
    image: tborychowski/miniflux-filter:latest
    container_name: mf-filter
    restart: always
    environment:
      - TZ=Europe/Berlin
      # if not present - there will be no auth
      # - ADMIN_PASSWORD=admin1
      # ERROR, WARNING, INFO, DEBUG
      - LOG_LEVEL=DEBUG
    ports:
      - "5020:80"
    volumes:
      - filter:/var/www/html/store
    networks:
      - intern
    labels:
      com.centurylinklabs.watchtower.enable: true
      com.centurylinklabs.watchtower.depends-on: miniflux

######## Volumes ########
volumes:
  db:
  filter:
######## Networks ########
networks:
  traefik:
    external: true
  intern:
    driver: bridge
