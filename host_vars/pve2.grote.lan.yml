---
  ### mgrote.zfs_manage_datasets
  # zfs create -o encryption=aes-256-gcm -o keyformat=passphrase hdd_data_raidz/data_crypt
  # zfs create hdd_data_raidz/videos
  # Pools müssen vorher erstellt sein!
  # rpool
  # zpool create -f -o ashift=12 rpool mirror ata-SAMSUNG_MZ7LH960HAJR-00005_S45NNC0R105094 /dev/disk/by-id/ata-SAMSUNG_MZ7LH960HAJR-00005_S45NNC0R105095
  # HDD_DATA_RAIDZ
  # zpool create -f -o ashift=12 hdd_data_raidz raidz /dev/disk/by-id/ata-WDC_WD80EZAZ-11TDBA0_2SG991TJ /dev/disk/by-id/ata-WDC_WD80EZAZ-11TDBA0_2SGA23EJ /dev/disk/by-id/ata-ST8000DM004-2CX188_ZCT1AK0F


  ### mgrote.zfs_extra
  # Variablen für mgrote.zfs_health/trim/scrub/zed/arc_mem/ sind zusammengefasst unter zfs_extra_*
  zfs_datasets: # DatenPools werden hier nicht verwaltet
    - dataset: rpool/vm
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: rpool/vm/dir
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: rpool/vm/zvol
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: rpool/vm/qcow
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/papa_backup
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/pve_backup
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
      recordsize: 1M
    - dataset: hdd_data_raidz/videos
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
      recordsize: 1M
    - dataset: hdd_data_raidz/music
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/data_crypt
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/tmp
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/archiv
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/amd
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/bilder
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/hm
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/scans
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/restic
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: hdd_data_raidz/backup
      state: present
      compression: zstd
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
  zfs_extra_arc_max_size: "8589934592" # 8GB in Bytes
  zfs_extra_zfs_pools:
    - name: "rpool"
      cron_minutes_zfs_scrub: "0"
      cron_hour_zfs_scrub: "23"
      cron_day_of_month_zfs_scrub: "14"
      cron_day_of_week_zfs_scrub: "*"
      cron_month_zfs_scrub: "*/2"
    - name: "hdd_data_raidz"
      cron_minutes_zfs_scrub: "0"
      cron_hour_zfs_scrub: "23"
      cron_day_of_month_zfs_scrub: "14"
      cron_day_of_week_zfs_scrub: "*"
      cron_month_zfs_scrub: "*/2"

  ### mgrote.zfs_sanoid
  sanoid_datasets:
    - path: 'hdd_data_raidz/data_crypt'
      template: '31tage'
      recursive: 'no'
      snapshots: true
    - path: 'hdd_data_raidz/videos'
      template: '14tage'
      recursive: 'yes'
      snapshots: true
    - path: 'hdd_data_raidz/music'
      template: '14tage'
      recursive: 'yes'
      snapshots: true
    - path: 'hdd_data_raidz/papa_backup'
      template: '14tage'
      recursive: 'yes'
      snapshots: true
    - path: 'hdd_data_raidz/tmp'
      template: '3tage'
      recursive: 'yes'
      snapshots: true
    - path: 'hdd_data_raidz/pve_backup'
      snapshots: false # deaktiviert sanoid für das dataset
    - path: 'hdd_data_raidz/archiv'
      template: '14tage'
      recursive: 'yes'
      snapshots: true
    - path: hdd_data_raidz/amd
      recursive: 'no'
      snapshots: true
      template: '31tage'
    - path: hdd_data_raidz/bilder
      recursive: 'no'
      snapshots: true
      template: '14tage'
    - path: hdd_data_raidz/hm
      recursive: 'no'
      snapshots: true
      template: '14tage'
    - path: hdd_data_raidz/scans
      recursive: 'no'
      snapshots: true
      template: '3tage'
    - path: hdd_data_raidz/backup
      recursive: 'no'
      snapshots: true
      template: '31tage'
    - path: hdd_data_raidz/restic
      recursive: 'no'
      snapshots: false
  sanoid_templates:
    - name: '31tage'
      keep_hourly: '24'                        # Aufheben (Stunde)
      keep_daily: '31'                         # Aufheben (Tage)
      keep_monthly: '3'                        # Aufheben (Monate)
      keep_yearly: '0'                         # Aufheben (Jahre)
      frequently: '16'                         # Aufheben (Minuten)
      frequent_period: '15'                    # Intervall (alle 5 Minuten)
      autosnap: 'yes'                          # Automatisches erstellen von Snapshots
      autoprune: 'yes'
    - name: '14tage'
      keep_hourly: '0'
      keep_daily: '14'
      keep_monthly: '0'
      keep_yearly: '0'
      frequently: '0'
      frequent_period: '0'
      autosnap: 'yes'
      autoprune: 'yes'
    - name: '3tage'
      keep_hourly: '0'
      keep_daily: '3'
      keep_monthly: '0'
      keep_yearly: '0'
      frequently: '0'
      frequent_period: '0'
      autosnap: 'yes'
      autoprune: 'yes'
    - name: '3monate'
      keep_hourly: '0'
      keep_daily: '3'
      keep_monthly: '3'
      keep_yearly: '0'
      frequently: '0'
      frequent_period: '0'
      autosnap: 'yes'
      autoprune: 'yes'

  ### mgrote.cv4pve-autosnap
  cv4pve_api_user: root@pam!cv4pve-autosnap
  cv4pve_api_token: "{{ lookup('keepass', 'cv4pve_api_token', 'password') }}"
  cv4pve_vmid: all,-127,-158,-112,-100
  cv4pve_keep_snapshots: 5
  cv4pve_dl_link: "https://github.com/Corsinvest/cv4pve-autosnap/releases/download/v1.10.0/cv4pve-autosnap-linux-x64.zip"
