---
  ### mgrote.zfs_manage_datasets
  # "Daten"-Datasets verwalte ich händisch!
  # zfs create -o encryption=aes-256-gcm -o keyformat=passphrase hdd_data_raidz/data_crypt
  # zfs create hdd_data_raidz/videos
  # Pools müssen vorher erstellt sein!
  # rpool
  # zpool create -f -o ashift=12 rpool mirror /dev/disk/by-id/ata-ADATA_SU650_2J4420001210 /dev/disk/by-id/ata-ADATA_SU650_2J4420001241
  # HDD_VM_MIRROR
  # zpool create -f -o ashift=12 hdd_vm_mirror mirror /dev/disk/by-id/ata-WDC_WD20EACS-11BHUB0_WD-WCAZA3124223 /dev/disk/by-id/ata-WDC_WD20EZRX-00D8PB0_WD-WMC4M1682516 mirror /dev/disk/by-id/ata-WDC_WD30EZRX-00DC0B0_WD-WMC1T3979908 /dev/disk/by-id/ata-TOSHIBA_DT01ACA300_83M2DRAKS
  # HDD_DATA_RAIDZ
  # zpool create -f -o ashift=12 hdd_data_raidz raidz /dev/disk/by-id/ata-WDC_WD80EZAZ-11TDBA0_2SG991TJ /dev/disk/by-id/ata-WDC_WD80EZAZ-11TDBA0_2SGA23EJ /dev/disk/by-id/ata-ST8000DM004-2CX188_ZCT1AK0F
  zfs_datasets:
    - dataset: rpool/vm/dir
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: rpool/vm/zvol
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
    - dataset: rpool/vm/qcow
      state: present
      compression: lz4
      sync: disabled
      xattr: sa
      dnodesize: auto
      atime: on
      snapdir: hidden
  ### mgrote.apcupsd
  apcupsd_nis_master: true
  apcupsd_nis_master_hostname: pve2.grote.lan
  ### mgrote.zfs_extra # Variablen für mgrote.zfs_health/trim/scrub/zed/arc_mem/ sind zusammengefasst unter zfs_extra_*
  zfs_extra_arc_max_size: "17179869184" # 16GB in Bytes
  zfs_extra_max_usage_health: "90"
  zfs_extra_zfs_pools:
    - name: "ssd_vm_mirror"
      type: "ssd"
      cron_minute_zfs_trim: "5"
      cron_hour_zfs_trim: "22"
      cron_month_zfs_trim: "4,8,12"
      cron_day_zfs_trim: "2"
      cron_weekday_zfs_scrub: "6"
      cron_minutes_zfs_scrub: "0"
      cron_hour_zfs_scrub: "23"
    - name: "hdd_vm_mirror"
      type: "hdd"
      cron_minute_zfs_trim: "5"
      cron_hour_zfs_trim: "23"
      cron_month_zfs_trim: "4,8,12"
      cron_day_zfs_trim: "2"
      cron_weekday_zfs_scrub: "6"
      cron_minutes_zfs_scrub: "0"
      cron_hour_zfs_scrub: "22"
    - name: "hdd_data_raidz"
      type: "hdd"
      cron_minute_zfs_trim: "5"
      cron_hour_zfs_trim: "24"
      cron_month_zfs_trim: "4,8,12"
      cron_day_zfs_trim: "2"
      cron_weekday_zfs_scrub: "6"
      cron_minutes_zfs_scrub: "0"
      cron_hour_zfs_scrub: "23"
  ### mgrote.zfs_sanoid
  sanoid_datasets:
    - path: 'hdd_data_raidz/videos'
      template: 'hourly'                        # muss in Templates angelegt sein
      recursive: ' yes'
    - path: 'hdd_data_raidz/data_crypt'
      template: 'fiveminutes'
      recursive: ' yes'
  sanoid_templates:
    - name: 'fiveminutes'
      keep_hourly: '24'                        # Aufheben (Stunde)
      keep_daily: '31'                         # Aufheben (Tage)
      keep_monthly: '6'                        # Aufheben (Monate)
      keep_yearly: '0'                         # Aufheben (Jahre)
      frequently: '36'                         # Aufheben (Minuten)
      frequent_period: '5'                     # Intervall (alle 5 Minuten)
      autosnap: 'yes'                          # Automatisches erstellen von Snapshots
      autoprune: 'yes'
    - name: 'hourly'
      keep_hourly: '24'
      keep_daily: '31'
      keep_monthly: '6'
      keep_yearly: '1'
      frequently: '0'
      frequent_period: '0'
      autosnap: 'yes'
      autoprune: 'yes'
  ### mgrote.cv4pve-autosnap
  cv4pve_api_user: root@pam!cv4pve-autosnap
  cv4pve_api_token: "{{ lookup('keepass', 'cv4pve_api_token', 'password') }}"
  cv4pve_vmid: all,-109,-158,-123,-131
  cv4pve_keep_snapshots: 1
  cv4pve_dl_link: "https://github.com/Corsinvest/cv4pve-autosnap/releases/download/v1.9.10/cv4pve-autosnap-linux-x64.zip"
